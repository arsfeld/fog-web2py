(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/arosenfeld/Dropbox/fog_backup/web2py/applications/kpax/controllers/news.py'
p4
sS'code'
p5
S"if not session.token and not request.function=='rss': redirect(LOGIN)\n\ndef index():\n    announcements=accessible('announcement')\\\n         (db.announcement.expires_on>=today)\\\n         (db.user.id==db.announcement.owner)\\\n         (~db.announcement.id.belongs(db(db.ignore_announcement.user==user_id)\\\n                               ._select(db.ignore_announcement.announcement)))\\\n         .select(orderby=~db.announcement.posted_on|db.announcement.id)\n    return dict(announcements=find_groups(announcements))\n\ndef ignore_announcement():\n    if len(request.args)==1:\n        id=request.args[0]\n        db.ignore_announcement.insert(user=user_id,announcement=id)\n    redirect(URL(r=request,f='index'))\n\ndef post_announcement():\n    form=SQLFORM(db.announcement,fields=db.announcement.public_fields)\n    form.vars.owner=user_id\n    if form.accepts(request.vars,session):\n        print g_tuple\n        id=db.access.insert(users_group=g_tuple[1],table_name='announcement',\\\n                            record_id=form.vars.id,access_type='read')\n        session.flash='announcement posted'\n        redirect_change_permissions(db.announcement,form.vars.id)\n    return dict(form=form)\n\ndef edit_announcement():\n    if len(request.args)<1: redirect(URL(r=request,f='index'))\n    rows=db(db.announcement.id==request.args[0])\\\n           (db.announcement.owner==user_id).select()\n    if not len(rows): redirect(URL(r=request,f='index'))\n    form=SQLFORM(db.announcement,rows[0],deletable=True,\\\n                 fields=db.announcement.public_fields,showid=False)\n    if form.accepts(request.vars,session):\n        if request.vars.delete_this_record=='on':\n            session.flash='announcement deleted'\n        else:\n            session.flash='announcement saved'\n        redirect(URL(r=request,f='index'))\n    return dict(form=form)\n\ndef rss():\n    response.headers['Content-Type']='application/rss+xml'\n    import gluon.contrib.rss2 as rss2\n    requested_groups=request.vars.groups or '1'\n    try: requested_groups=tuple([int(i) for i in requested_groups.split(',')])\n    except: return ''\n    entries=db(db.announcement.id==db.access.record_id)\\\n            (db.access.table_name=='announcement')\\\n            (db.access.users_group.belongs(requested_groups))\\\n            (db.announcement.to_rss==True)\\\n            (db.user.id==db.announcement.owner)\\\n            .select(groupby=db.announcement.id)\n    items = [rss2.RSSItem(\n               title=entry.announcement.title,\n               link=MAIN,\n               author=entry.user.email,\n               description = entry.announcement.body,\n               pubDate = entry.announcement.posted_on) for entry in entries]\n    rss = rss2.RSS2(title='public rss for groups '+str(requested_groups),\n       link = MAIN,\n       description = str(requested_groups),\n       lastBuildDate = datetime.datetime.now(),\n       items=items)\n    return rss2.dumps(rss)\n\nresponse._vars=response._caller(post_announcement)\n"
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/arosenfeld/Dropbox/fog_backup/web2py/gluon/restricted.py", line 184, in restricted\n    exec ccode in environment\n  File "/home/arosenfeld/Dropbox/fog_backup/web2py/applications/kpax/controllers/news.py", line 69, in <module>\n  File "/home/arosenfeld/Dropbox/fog_backup/web2py/gluon/globals.py", line 103, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/arosenfeld/Dropbox/fog_backup/web2py/applications/kpax/controllers/news.py", line 23, in post_announcement\n    id=db.access.insert(users_group=g_tuple[1],table_name=\'announcement\',\\\nIndexError: tuple index out of range\n'
p8
s.